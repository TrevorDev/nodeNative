#hdr
#include <iostream>
#include "src/vulkanHelper.h"
#end

using namespace std;  

int main()  
{  
	VulkanHelper* v = new VulkanHelper();
	v->initDevice();
	uint32_t bufferSize = sizeof(int32_t) * 10;
	VkDeviceMemory gpuMemory = (v->allocGPUMemory(bufferSize));
	uint32_t* memory = (uint32_t*)(v->mapGPUMemoryToCPU(gpuMemory, bufferSize));
	for (uint32_t k = 0; k < bufferSize / sizeof(int32_t); k++) {
      memory[k] = rand();
    }
    v->unmapCPUMemoryBackToGPU(gpuMemory);
    v->applyShader(gpuMemory, bufferSize);
    cout << v->m_num << endl;
}  
